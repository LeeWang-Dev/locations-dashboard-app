{"version":3,"sources":["services/locations.js","utils/constants.js","components/locations-dashboard/Map.js","components/locations-dashboard/Main.js","components/App.js","reportWebVitals.js","index.js"],"names":["getMarkers","a","result","url","axios","get","then","response","data","catch","err","status","message","useStyles","makeStyles","mapContainer","display","Map","classes","useState","longitude","latitude","zoom","viewport","setViewport","useEffect","console","log","className","width","height","mapStyle","mapboxApiAccessToken","attributionControl","maxZoom","onViewportChange","offsetLeft","offsetTop","root","Main","theme","createTheme","App","ThemeProvider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0RAGaA,EAAU,uCAAG,8BAAAC,EAAA,6DAClBC,EAAS,KAETC,EAHkB,UCHF,wBDGE,6BAKhBC,IAAMC,IAAIF,GAAKG,MAAK,SAACC,GACvBL,EAASK,EAASC,QACjBC,OAAM,SAACC,GACRR,EAAS,CACPS,OAAQ,eACRC,QAAS,6BAVO,gCAafV,GAbe,2CAAH,qD,OEMjBW,EAAYC,YAAW,CAC1BC,aAAa,CACV,wBAAyB,CACtBC,QAAS,WAwDHC,MAnDf,WACI,IAAMC,EAAUL,IAChB,EAAgCM,mBAAS,CACrCC,WAAY,OACZC,SAAU,MACVC,KAAM,KAHV,mBAAOC,EAAP,KAAiBC,EAAjB,KAMA,EAA8BL,mBAAS,IAAvC,mBAUA,OAVA,UAEAM,oBAAS,sBAAC,4BAAAxB,EAAA,sEAEaD,IAFb,OAEFE,EAFE,OAGNwB,QAAQC,IAAIzB,GAHN,2CAMP,IAGC,cAAC,IAAD,yBAAY0B,UAAWV,EAAQH,cACvBQ,GADR,IAEIM,MAAM,OACNC,OAAO,OACPC,SAAS,sCACTC,qBDvCuB,gGCyCvBC,oBAAoB,EACpBC,QAAS,GAOTC,iBAAkBX,EAftB,SAyBI,cAAC,IAAD,CAAQH,SAAU,MAAOD,WAAY,OAAQgB,YAAa,GAAIC,WAAY,GAA1E,SACI,qDCxDVxB,EAAYC,YAAW,CAC1BwB,KAAK,CACFT,MAAM,QACNC,OAAO,WAaES,MATf,WACI,IAAMrB,EAAUL,IAChB,OACG,qBAAKe,UAAWV,EAAQoB,KAAxB,SACI,cAAC,EAAD,OCZLE,EAAQC,cAUCC,MARf,WACE,OACE,cAACC,EAAA,EAAD,CAAeH,MAAOA,EAAtB,SACG,cAAC,EAAD,OCEQI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBxC,MAAK,YAAkD,IAA/CyC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.f318ad19.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport { BASE_URL } from \"../utils/constants.js\";\r\n\r\nexport const getMarkers = async () => {\r\n    var result = null;\r\n    \r\n    let url = `${BASE_URL}/api/markers/get`;\r\n  \r\n    await axios.get(url).then((response) => {\r\n        result = response.data;\r\n      }).catch((err) => {\r\n        result = {\r\n          status: \"disconnected\",\r\n          message: \"No internet connection\",\r\n        };\r\n      });\r\n    return result;\r\n  };","export const BASE_URL = 'http://localhost:8080';\r\n//export const BASE_URL = 'https://locations-dashboard-herokuapp.com';\r\nexport const MAPBOX_ACCESS_TOKEN = 'pk.eyJ1IjoibGVld2FuZ2RldiIsImEiOiJja2tnbDU2c2gwMHNvMndsdDF1d2pxNTQ2In0.zKeo06DtCh6fLifrbCZCFA';","import React, { useState, useEffect } from 'react';\r\n\r\nimport { makeStyles } from '@mui/styles';\r\n\r\nimport ReactMapGL, { Marker } from 'react-map-gl';\r\n\r\nimport { MAPBOX_ACCESS_TOKEN } from \"../../utils/constants.js\";\r\nimport { getMarkers } from \"../../services/locations.js\";\r\n\r\nconst useStyles = makeStyles({\r\n   mapContainer:{\r\n      '& .mapboxgl-ctrl-logo': {\r\n         display: 'none'\r\n       }\r\n   }\r\n});\r\n\r\nfunction Map() {\r\n    const classes = useStyles();\r\n    const [viewport, setViewport] = useState({\r\n        longitude: -122.45,\r\n        latitude: 37.78,\r\n        zoom: 14\r\n    });\r\n\r\n    const [markers, setMarkers] = useState([]);\r\n\r\n    useEffect(async ()=>{\r\n\r\n        var result = await getMarkers();\r\n        console.log(result);\r\n        //setMarkers(result);\r\n \r\n    }, []);\r\n\r\n    return (\r\n        <ReactMapGL className={classes.mapContainer}\r\n            {...viewport}    \r\n            width=\"100%\"\r\n            height=\"100%\"\r\n            mapStyle=\"mapbox://styles/mapbox/satellite-v9\"\r\n            mapboxApiAccessToken={MAPBOX_ACCESS_TOKEN}\r\n            //ref={mapRef}\r\n            attributionControl={false}\r\n            maxZoom={24}\r\n            //minZoom={16}\r\n            //maxPitch={0}\r\n            //dragPan={dragPan}\r\n            //preserveDrawingBuffer={true}\r\n            //dragRotate={false}\r\n            //transitionDuration={100}\r\n            onViewportChange={setViewport}\r\n            //getCursor={() => mouseCursor}\r\n            //onMouseMove={handleMouseMove}\r\n            //onClick={handleMouseClick}\r\n            //onMouseDown={handleMouseDown}\r\n            //onMouseUp={handleMouseUp}\r\n            //onTouchStart={handleMouseDown}\r\n            //onTouchMove={handleMouseMove}\r\n            //onTouchEnd={handleMouseUp}\r\n        >\r\n            <Marker latitude={37.78} longitude={-122.41} offsetLeft={-20} offsetTop={-10}>\r\n                <div>You are here</div>\r\n            </Marker>\r\n        </ReactMapGL>\r\n    );\r\n}\r\n\r\nexport default Map;","import React from 'react';\r\n\r\nimport { makeStyles } from '@mui/styles';\r\n\r\nimport Map from \"./Map.js\";\r\n\r\nconst useStyles = makeStyles({\r\n   root:{\r\n      width:'100vw',\r\n      height:'100vh'\r\n   }\r\n});\r\n\r\nfunction Main() {\r\n    const classes = useStyles();\r\n    return (\r\n       <div className={classes.root}>\r\n           <Map />\r\n       </div>\r\n    );\r\n}\r\n\r\nexport default Main;","import React from 'react';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\n\nimport Locations_Dashboard from \"./locations-dashboard/Main.js\";\n\nconst theme = createTheme();\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n       <Locations_Dashboard />\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}